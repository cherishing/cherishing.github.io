<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jasmine</title>
  <subtitle>不积跬步，无以至千里</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-03T01:46:51.769Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jasmine</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>逻辑运算符</title>
    <link href="http://yoursite.com/2017/03/02/logicalOperator/"/>
    <id>http://yoursite.com/2017/03/02/logicalOperator/</id>
    <published>2017-03-02T03:53:17.000Z</published>
    <updated>2017-03-03T01:46:51.769Z</updated>
    
    <content type="html"><![CDATA[<p><div class="logical_text">常常习惯性觉得某个东西应该这样，但很多时候实际情况和我们想象的有很大的出入，所以才需要实践。<br>实践出真知，学会用事实说话。JS逻辑&amp;&amp;和逻辑||很特殊，会让你大吃一惊的。</div></p>
<p><div class="logicalOperator"><img src="/img/logicalOperator/theme_01.jpg"><img src="/img/logicalOperator/theme_02.jpg"><img src="/img/logicalOperator/theme_03.jpg"></div><br><a id="more"></a></p>
<h2 id="逻辑与（-amp-amp-）"><a href="#逻辑与（-amp-amp-）" class="headerlink" title="逻辑与（&amp;&amp;）"></a>逻辑与（&amp;&amp;）</h2><p>逻辑与可以应用于任何数据类型的操作数，而不仅仅是布尔值。在有一个操作不是布尔值的情况下，逻辑与操作不一定返回布尔值。哦，是不一定哦！！！<br>逻辑与遵循规则有：<br>（1）如果第一个操作数是对象，则返回第二个操作数；</p>
<p><img src="/img/logicalOperator/clipboard_01.png"></p>
<p>（2）如果第二个操作数是对象，只有在第一个操作数求值结果为true的情况下才会返回该对象；<br>    对于操作数的求值，是JS中的求值。</p>
<p><img src="/img/logicalOperator/clipboard_02.png"></p>
<p>（3）如果两个操作数都是对象，则返回第二个操作数；</p>
<p><img src="/img/logicalOperator/clipboard_03.png"></p>
<p>（4）如果有一个操作数是null则返回null;</p>
<p><img src="/img/logicalOperator/clipboard_04.png"></p>
<p>（5）如果有一个操作数是NaN，则返回NaN;</p>
<p><img src="/img/logicalOperator/clipboard_05.png"></p>
<p>（6）如果有一个操作数是undefined，则返回undefined;</p>
<p><img src="/img/logicalOperator/clipboard_06.png"></p>
<p> 总结：逻辑与是短路操作，第一个操作数能决定结果就不会对第二个操作数进行求值。</p>
<h2 id="逻辑或（-）"><a href="#逻辑或（-）" class="headerlink" title="逻辑或（||）"></a>逻辑或（||）</h2><p>只要有一个不是布尔值，或运算也不一定返回布尔值。<br>遵循规则：<br>（1）如果第一个操作数是对象，就返回第一个；</p>
<p><img src="/img/logicalOperator/clipboard_07.png"></p>
<p>（2）如果第一个求值为false，则返回第二个；</p>
<p><img src="/img/logicalOperator/clipboard_08.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;div class=&quot;logical_text&quot;&gt;常常习惯性觉得某个东西应该这样，但很多时候实际情况和我们想象的有很大的出入，所以才需要实践。&lt;br&gt;实践出真知，学会用事实说话。JS逻辑&amp;amp;&amp;amp;和逻辑||很特殊，会让你大吃一惊的。&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;logicalOperator&quot;&gt;&lt;img src=&quot;/img/logicalOperator/theme_01.jpg&quot;&gt;&lt;img src=&quot;/img/logicalOperator/theme_02.jpg&quot;&gt;&lt;img src=&quot;/img/logicalOperator/theme_03.jpg&quot;&gt;&lt;/div&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="逻辑运算符" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>0度</title>
    <link href="http://yoursite.com/2017/01/05/zero/"/>
    <id>http://yoursite.com/2017/01/05/zero/</id>
    <published>2017-01-05T01:36:34.000Z</published>
    <updated>2017-01-05T01:46:20.075Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/zero/1.jpg" alt="0度"></p>
<a id="more"></a>
<p><b> 北京的冬天只有0度。<b></b></b></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/zero/1.jpg&quot; alt=&quot;0度&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>骑行魔都</title>
    <link href="http://yoursite.com/2017/01/04/the-trip-to-shanghai/"/>
    <id>http://yoursite.com/2017/01/04/the-trip-to-shanghai/</id>
    <published>2017-01-04T09:04:47.000Z</published>
    <updated>2017-01-04T12:05:27.367Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/shanghai_trip/else/1.jpg" alt="魔都" width="98%" height="98%"></p>
<a id="more"></a>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>首先，感谢小灰的款待，在上海happy地摇摆了三天。<br><img src="/img/shanghai_trip/else/yaobai.jpg" alt="魔都"></p>
<h3 id="单车魔都"><a href="#单车魔都" class="headerlink" title="单车魔都"></a>单车魔都</h3><p>去了趟上海，见识到了不少的共享车，如：mobike，ofo，小鸣单车，共享出行等等。</p>
<p>记忆比较深刻的几个场景：</p>
<p><b>场景一:</b>从外滩骑行回住宿的地方。</p>
<p><img src="/img/shanghai_trip/bike/1.jpg" alt="骑行" class="wq_img_max wq_img_scale">&nbsp;&nbsp;&nbsp;&nbsp;<img src="/img/shanghai_trip/bike/2.jpg" alt="骑行" class="wq_img_max wq_img_scale wq_img_marginTop"><br><br><br><b>场景二：</b>一人两车</p>
<p>厉害了，小灰。骑车mobike去找ofo，一起把它们骑来。厉害！！！大写的服!!!!<br>旁边配上一张行走的潮流（骑共享出行电动车的人）。<br><img src="/img/shanghai_trip/bike/3.jpg" alt="骑行" class="wq_img_max wq_img_scale">&nbsp;&nbsp;&nbsp;&nbsp;<img src="/img/shanghai_trip/bike/4.jpg" alt="骑行" class="wq_img_max wq_img_scale wq_img_marginTop"><br><br></p>
<h3 id="迪斯尼"><a href="#迪斯尼" class="headerlink" title="迪斯尼"></a>迪斯尼</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;欢迎来到童话王国。撒花，撒花，撒花<br><img src="/img/shanghai_trip/disney/1.jpg" alt="disney" class="wq_img_max2 wq_img_scale_sm">&nbsp;&nbsp;&nbsp;&nbsp;<img src="/img/shanghai_trip/disney/6.jpg" alt="disney" class="wq_img_max2 wq_img_scale_sm wq_img_marginTop"><br>人真的是多多多！！！排了四个小时的队，玩了两个项目，一个加勒比海盗，一个创极速光轮。创极速光轮，嗖嗖的一下，速度可以的。<br><img src="/img/shanghai_trip/disney/scare.gif" alt="disney" class="wq_img_max wq_img_scale_sm">&nbsp;&nbsp;&nbsp;&nbsp;<img src="/img/shanghai_trip/disney/5.jpg" alt="disney" class="wq_img_max wq_img_scale_sm wq_img_marginTop"><br><b>wow。</b><br><img src="/img/shanghai_trip/disney/7.jpg" alt="disney" class="wq_img_max3 wq_img_scale">&nbsp;&nbsp;&nbsp;&nbsp;<img src="/img/shanghai_trip/disney/8.jpg" alt="disney" class="wq_img_max3 wq_img_scale wq_img_marginTop"></p>
<h3 id="美食"><a href="#美食" class="headerlink" title="美食"></a>美食</h3><h5 id="小杨生煎"><a href="#小杨生煎" class="headerlink" title="小杨生煎"></a>小杨生煎</h5><p>跟着行走的潮流骑着小电驴去吃的，味道还是很nice滴，据说图一是我这样的胖子喜欢吃的。<br><img src="/img/shanghai_trip/food/1.jpg" alt="food" class="wq_img_max3 wq_img_scale">&nbsp;&nbsp;&nbsp;&nbsp;<img src="/img/shanghai_trip/food/2.jpg" alt="food" class="wq_img_max3 wq_img_scale wq_img_marginTop"></p>
<h4 id="上海菜"><a href="#上海菜" class="headerlink" title="上海菜"></a>上海菜</h4><p>oh, no。上海菜，甜甜的。<br><img src="/img/shanghai_trip/food/3.jpg" alt="food" class="wq_img_max2 wq_img_scale_sm"></p>
<h3 id="feelling"><a href="#feelling" class="headerlink" title="feelling"></a>feelling</h3><p>总得来说，魔都骑行之旅还是不错的，一路各种逗比，欢乐多多。魔都的天气完胜帝都呀！<br>大城市好像都是一样的，灯光，马路，繁华地段，人山人海。走在上海和在北京的感觉差不多，熟悉的喧闹，熟悉的人。</p>
<p><b>上海F4</b><br><img src="/img/shanghai_trip/we/2.jpg" alt="上海F4" class="wq_img_max2 wq_img_scale_sm"><br><b>2B组合</b><br><img src="/img/shanghai_trip/we/4.jpg" alt="2B组合" class="wq_img_max2 wq_img_scale_sm"></p>
<h3>good-bye, shanghai.</h3>

<p><img src="/img/shanghai_trip/we/9.jpg" alt="再见" class="wq_img_max wq_img_scale_sm"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/shanghai_trip/else/1.jpg&quot; alt=&quot;魔都&quot; width=&quot;98%&quot; height=&quot;98%&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="旅游" scheme="http://yoursite.com/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>再见2016，你好2017</title>
    <link href="http://yoursite.com/2016/12/21/2016yearEnd/"/>
    <id>http://yoursite.com/2016/12/21/2016yearEnd/</id>
    <published>2016-12-21T02:06:55.000Z</published>
    <updated>2016-12-23T08:12:35.166Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/2016yearEnd/2.png" alt="再见2016，你好2017"></p>
<a id="more"></a>
<h2 id="再见2016"><a href="#再见2016" class="headerlink" title="再见2016"></a>再见2016</h2><h3 id="做了啥？"><a href="#做了啥？" class="headerlink" title="做了啥？"></a>做了啥？</h3><p>&nbsp;&nbsp;不停的在思考自己这一年做了些什么，用一个句话来形容今年：有点乱，是成长的一年。<br>记忆中2016年的上半年都在毕业中度过了，下半年入职以来还是做了一些令自己满意的事。比如：<br>&nbsp;&nbsp;&nbsp;&nbsp;1、把红宝书上的基础部分都再次学习了一遍，收获多多。<br>&nbsp;&nbsp;&nbsp;&nbsp;2、给自己搭了个小窝，我的blog诞生了。<br>&nbsp;&nbsp;&nbsp;&nbsp;3、养成了做笔记的习惯<br>&nbsp;&nbsp;&nbsp;&nbsp;4、写工作总结的重要性<br>&nbsp;&nbsp;&nbsp;&nbsp;5、慢慢的在找到适合自己的方式。</p>
<p><strong>2016年的书籍收获wow</strong><br><strong>专业书单：</strong><br><img src="/img/2016yearEnd/loveBook.jpg" alt="专业书单" style="border:1px dashed #f00;"></p>
<p><strong>小屋书单：</strong><br><img src="/img/2016yearEnd/qibook.jpg" alt="小屋书单" style="border:1px dashed #f00;"></p>
<p><strong>2016年的梦想：</strong><br><img src="/img/2016yearEnd/dream.jpg" alt="2016年的梦想" style="border:1px dashed #f00;"></p>
<h3 id="成长了？"><a href="#成长了？" class="headerlink" title="成长了？"></a>成长了？</h3><p>&nbsp;&nbsp;成长了吗？成长了一点点。我就像蜗牛一样，慢慢的往前爬，每一步都走的很踏实。<br>看着自己的有道笔记， 里面各种分类，有javascript，css3, http协议，svg, d3.js等等。满满的都是看得见的成就感，起码知道自己一直在前进中。感谢我们老大的指引，让我学到很多，也更好的认识了自己，谢谢。<br>&nbsp;&nbsp;故不积跬步，无以至千里。习惯，写代码习惯的重要性；思路，学会写伪代码；想，把问题思考的更全面；沟通表达，更好的交流传递。<br>&nbsp;&nbsp; 热爱，I like it.</p>
<h3 id="不足之处"><a href="#不足之处" class="headerlink" title="不足之处"></a>不足之处</h3><p>菜鸟的我需要学习的东西太多了，一个不善于交际的人，往往表达能力不强，这是我需要提高的。管理好自己的时间作息，好的身体才有好的精神，上班的状态才能最佳。锻炼身体，早起早睡。</p>
<h2 id="你好2017"><a href="#你好2017" class="headerlink" title="你好2017"></a>你好2017</h2><h3 id="定个小目标"><a href="#定个小目标" class="headerlink" title="定个小目标"></a>定个小目标</h3><p>先瘦5斤吧，我的天。没听错吧！！！<br><img src="/img/2016yearEnd/omg.gif" alt="我的天"><br>哈哈，说正事了，每月整理好自己的学习内容，上传到github上去，每月画好思维导图，过上有计划的生活吧。跟随xxz-plan。列出自己书籍清单中，每月计划阅读的书籍。虽然没能力环游世界，那就先让大脑环游世界吧。生活唯有工作学习和读书最美好。都是我爱的事。昨天看到一句话，如果你有想要完成的事或者爱的人，不仅要努力还要拼命。关于热爱，不能有丝毫的怠慢。想想就美好。<br>&nbsp;&nbsp;看看我家欧巴，心情就美好，滋滋滋。<img src="/img/2016yearEnd/gd.gif" alt="gd"></p>
<h3 id="2017年的梦想"><a href="#2017年的梦想" class="headerlink" title="2017年的梦想"></a>2017年的梦想</h3><p>1、家人<br>2、做自己的光，努力让自己发光<br>3、学习永不止步<br>4、坚持培养自己的兴趣爱好，阅读，跑步， 画画， 听歌<br>5、多出去外面走走，看看外面的世界<br>6、开心的吃好每一餐睡好每一觉，管理好情绪<br>……</p>
<h3 id="做一个阳光的小王子"><a href="#做一个阳光的小王子" class="headerlink" title="做一个阳光的小王子"></a>做一个阳光的小王子</h3><p>爱己及人，呼吸这北京的雾霾也挡不住小王子的热情。你就像那冬天的一把火，….，<br>在代码路上越来越棒，……<br>最后23岁,你好，生日快乐，小王子。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/2016yearEnd/2.png&quot; alt=&quot;再见2016，你好2017&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="年终总结" scheme="http://yoursite.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>时间分片问题</title>
    <link href="http://yoursite.com/2016/12/20/timeSlicing/"/>
    <id>http://yoursite.com/2016/12/20/timeSlicing/</id>
    <published>2016-12-20T12:16:35.000Z</published>
    <updated>2016-12-20T13:35:09.986Z</updated>
    
    <content type="html"><![CDATA[<p>最近在工作中遇到一个新的需求，要求在前后两次接口请求中，第一次返回的数据值(A)和下次返回的数据值(B)，通过每次增加一定的值，从A加到B，从而达到数字在目标值之间快速翻动的效果，而没有出现数字跳跃。<br>效果图如下：<br><img src="/img/timeSlicing/gun01.gif" alt="数字滚动" style="margin:10px auto;"><br><a id="more"></a></p>
<h2 id="相关知识扩充-requestAnimationFrame"><a href="#相关知识扩充-requestAnimationFrame" class="headerlink" title="相关知识扩充-requestAnimationFrame"></a>相关知识扩充-requestAnimationFrame</h2><p>requestAnimationFrame是浏览器用于定时循环操作的一个接口，用的比较少，所以第一次听到的时候很惊讶，主要用途是按帧对网页进行重绘，优点：不会丢失帧，充分利用浏览器的刷新机制，(思考：浏览器刷新机制和显示器刷新机制的区别？？？)，节约资源。<br>用法参照：MDN(<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame" target="_blank" rel="external">requestAnimationFrame用法</a>)</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>如图：<br><img src="/img/timeSlicing/thinking.jpg" alt="时间分片思路图"></p>
<p>上图左框中表示的是每隔5s定时调用后台接口，返回记录值；右框中表示每次滚动值的计算。<br>下面详细描述下右框中的内容：前一次调用接口返回的值为48(假设叫prev)，直到下一<br>次调用返回值88(假设叫cur)，通过这个计算出速度speed = (88-48)/1000(1s为1000ms);<br>curVal = 48+speed*(curTime-startTime)(表示当前滚动的值)，curTime表示获取curVal<br>的时候时间，而startTime表示开始执行requestAnimationFrame时候的时间。</p>
<h2 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h2><p><img src="/img/timeSlicing/pseudo.jpg" alt="伪代码"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在工作中遇到一个新的需求，要求在前后两次接口请求中，第一次返回的数据值(A)和下次返回的数据值(B)，通过每次增加一定的值，从A加到B，从而达到数字在目标值之间快速翻动的效果，而没有出现数字跳跃。&lt;br&gt;效果图如下：&lt;br&gt;&lt;img src=&quot;/img/timeSlicing/gun01.gif&quot; alt=&quot;数字滚动&quot; style=&quot;margin:10px auto;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="时序" scheme="http://yoursite.com/tags/%E6%97%B6%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>原型与原型链</title>
    <link href="http://yoursite.com/2016/11/25/prototypeChain/"/>
    <id>http://yoursite.com/2016/11/25/prototypeChain/</id>
    <published>2016-11-25T09:32:48.000Z</published>
    <updated>2016-12-16T06:48:27.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>本文主要讲解 prototype, <strong>proto</strong>, constructor，instanceof各自的含义，构造函数，原型对象，实例之间的关系;描述出查找对象的属性的过程，原型链是如何构成的等等。<br><a id="more"></a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>每周一次的前端分享，想了几天实在是不知道分享啥，正好最近在看面向对象，那就讲讲原型和原型链吧，在我不理解它们的时候，每次面试只要听到这几个词就吓得半死，简直是前端的恶魔。学东西就是这样吧，越是不理解的越害怕以为很难，其实只要认真去学去理解，没有自己想象的那么难。还是那句话，不懂的总有一天会懂，共勉。</p>
<h2 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h2><h3 id="原型（prototype）"><a href="#原型（prototype）" class="headerlink" title="原型（prototype）"></a>原型（prototype）</h3><p><span style="color:red; font-weight:bolder;">原型（prototype）</span>：当一个函数被声明时，该函数下默认有一个属性：prototype，该属性的值是一个对象，当我们调用一个对象的属性或者方法的时候，如果该对象自身没有该属性或者方法，则会调用到该对象构造函数下的prototype的属性和方法。<br>简言之,prototype是声明一个函数的时候，在该函数下js创建的一个属性，这个属性指向函数的原型对象。</p>
<p>prototype的使用：通过某个构造函数创建出来的对象都可以公用的属性和方法。</p>
<p><strong>code:</strong>:<br>    function AA(){};<br>    var a = new AA();<br>    console.log(AA.prototype);  //Object,只有function定义的对象有该属性<br>    console.log(a.prototype);   //undefined,new操作符生成的对象没有该属性</p>
<h3 id="constructor-NaN"><a href="#constructor-NaN" class="headerlink" title="constructor"></a>constructor</h3><p><span style="color:red; font-weight:bolder;">constructor(构造函数)</span>：默认情况下，所有的原型对象都会自动获得一个constructor<br>属性，这个属性包含一个指向prototype属性所在函数的指针。<br><strong>code:</strong><br><img src="/img/protoChain/prototype_constructor01.png" alt="prototype"><br><br><br>输出结果：<br><img src="/img/protoChain/prototype_constructor02.png" alt="prototype"></p>
<h3 id="proto"><a href="#proto" class="headerlink" title="proto"></a><strong>proto</strong></h3><p><span style="color: red; font-weight:bolder;"><strong>proto</strong></span>：当调用构造函<br>数创建一个新实例后，该实例的内部将包含一个指针（内部属性[[prototype]]），指向构造函数的原型对象。在ECMA-262第五版中这个指针叫做[[prototype]]。<br>虽然在脚本中没有标准的方式访问[[prototype]]，但浏览器在每个对象上都支持一个属性<br><strong>proto</strong>；而在其他实现中，该属性对脚本完全是不可见的。</p>
<p>栗子：</p>
<p><img src="/img/protoChain/prototype__proto__01.png" alt="__proto__"><br><br><br>输出结果：<br><img src="/img/protoChain/prototype__proto__02.png" alt="__proto__"></p>
<h3 id="构造函数、原型对象、实例之间的关系"><a href="#构造函数、原型对象、实例之间的关系" class="headerlink" title="构造函数、原型对象、实例之间的关系"></a>构造函数、原型对象、实例之间的关系</h3><p>栗子：</p>
<p><img src="/img/protoChain/prototype_01.png" alt="prototype"><br>解释：声明了一个构造函数Person，则该构造函数下会自动创建一个prototype属性；手动的给Person.prototype加上了name,sex,action等属性；实例化new Person(),生成实例对<br>象p1;实例对象p1的<strong>proto</strong>指向了Person的原型对象，而Person的原型对象的constructor指向了构造函数Person,但是Person构造函数的prototype又指回了Person的原型对象。<br>换句话说，实例和构造函数没有直接关系；这个连接存在与实例和构造函数的原型对象之间。因此：Person.prototype === p1.<strong>proto</strong>.<br><br><br>详细描述图：<br><img src="/img/protoChain/prototype_02.png" alt="prototype"></p>
<h3 id="查找对象的属性"><a href="#查找对象的属性" class="headerlink" title="查找对象的属性"></a>查找对象的属性</h3><p>当代码读取某个对象的某个属性的时候，都会执行一次搜索，目标是具有给定名字的属性，搜索首先会从对象实例本身开始。如果在实例中找到了给定名字的属性，则返回该属性的值；如果没有找到，则继续搜索指针指向的原型对象。</p>
<h4 id="实例属性和原型属性"><a href="#实例属性和原型属性" class="headerlink" title="实例属性和原型属性"></a>实例属性和原型属性</h4><p>1）code:</p>
<p><img src="/img/protoChain/prototype__prototype01.png" alt="属性"><br>在实例中添加一个属性，而该属性与实例原型中的一个属性同名，我们就在实例中创造该属性，而屏蔽原型中的该属性（阻止我们访问原型中的那个属性，而不会修改那个属性）。虽然我们可以通过实例访问保持在原型中的值，但却不能通过对象实例重写原型中的值。<br>2）code:<br><img src="/img/protoChain/prototype__prototype02.png" alt="属性"></p>
<p>即使将p1.name设置为null,也只会在实例中设置这个属性，而不会恢复其指向原型的连接。只有通过delete操作符删除实例属性，才能够重新访问原型中的属性。</p>
<p>效果如：<br><img src="/img/protoChain/prototype__prototype03.png" alt="属性"></p>
<h4 id="判断属性存在原型上还是实例上"><a href="#判断属性存在原型上还是实例上" class="headerlink" title="判断属性存在原型上还是实例上"></a>判断属性存在原型上还是实例上</h4><p>hasOwnPrototype():只在给定属性存在对象实例中，才会返回true。<br>in操作符：它会在通过对象能够访问给定属性时返回true，无论该属性存在于实例中还是原型中。</p>
<p>方法：<br><strong> function hasPrototypeProperty(object, name){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return !object.hasOwnPrototype(name) &amp;&amp; (name in object);<br>} </strong></p>
<h2 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h2><p>原型对象也是普通的对象，并且也有可能有自己的原型，如果一个原型对象的原型不为null的话，我们就称之为原型链（prototype chain）<br>理解了下面两图的内容差不多就理解了原型链。</p>
<p><img src="/img/protoChain/prototype_chain01.png" alt="原型链"><br><br><br><br><br><img src="/img/protoChain/prototype_chain02.png" alt="原型链"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;本文主要讲解 prototype, &lt;strong&gt;proto&lt;/strong&gt;, constructor，instanceof各自的含义，构造函数，原型对象，实例之间的关系;描述出查找对象的属性的过程，原型链是如何构成的等等。&lt;br&gt;
    
    </summary>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="原型" scheme="http://yoursite.com/tags/%E5%8E%9F%E5%9E%8B/"/>
    
      <category term="原型链" scheme="http://yoursite.com/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>CSS3 - 形状</title>
    <link href="http://yoursite.com/2016/11/15/css3-shape/"/>
    <id>http://yoursite.com/2016/11/15/css3-shape/</id>
    <published>2016-11-15T10:31:13.000Z</published>
    <updated>2016-12-15T05:33:25.596Z</updated>
    
    <content type="html"><![CDATA[<p>最近在研究css3，拜读了《css揭秘》，收益匪浅，对css有了更深刻的认识，css并没有想像的那么简单，很多效果现在都可以用css实现，就拿图形的形状来说吧，下面我将总结一下学习到的知识。css3形状主要包括：椭圆，平行四边形，菱形，切角效果，饼图等等。<br>每一天都在进步。<br><a id="more"></a></p>
<h2 id="椭圆"><a href="#椭圆" class="headerlink" title="椭圆"></a>椭圆</h2><ul>
<li>border-radius<br>语法： border-radius:1-4 length|% / 1-4 length|%;<br>它是的简写形式如：border-radius：50%；但它实际上是：<br>如： border-radius:10px 20px 30px 40px / 40px 30px 20px 10px<br>斜杠/左边是四个圆角的水平半径，右边是四个圆角的垂直半径；但是通常我们很少写右边的参数，那就是默认右边等于左边的值<br>border-top-left-radius<br>border-top-right-radius<br>border-bottom-right-radius<br>border-bottom-left-radius<br>左上角开始，顺时针，空格分隔各个值<br><img src="/img/CSS3-Sheap/border-radius_01.png" alt="bordr-raidus" width="50%" height="50%"><br>绿色指的是水平半径，紫色指的是垂直半径。<br>示例：<a href="http://codepen.io/cherishing/pen/NbNmYr" target="_blank" rel="external">http://codepen.io/cherishing/pen/NbNmYr</a><br>椭圆：<br><img src="/img/CSS3-Sheap/border-radius_02.png" alt="bordr-raidus"><br>如上图，通过“/”单独指定水平半径和垂直半径<br>自适应椭圆：<br>border-radius:50% &lt;=&gt; border-radius:50% / 50%;<br>示例：<a href="http://codepen.io/cherishing/pen/dOMJyj" target="_blank" rel="external">http://codepen.io/cherishing/pen/dOMJyj</a></li>
</ul>
<p><strong> 1)  半椭圆的绘制 </strong><br><img src="/img/CSS3-Sheap/border-radius_03.png" alt="bordr-raidus" width="50%" height="50%"><br>css-code如：<br>.circle{<br>  width:300px;<br>  height:200px;<br>  margin:10px auto;<br>  background:#f00;<br>  border-radius:50% /100% 100% 0 0;<br>}<br>上图的半椭圆是沿x轴劈开的，它的左右水平半径各占容器宽度的一般，所以水平半径为50%；而垂直半径只有左上角，右上角有，且垂直半径占据了容器的整个高度，所以垂直半径为100% 100% 0 0，结合起来就是上面css-code中的。<br>可能很多人和我第一次写的一样，错误的写法如：border-radius:50% 50% 0 0;<br>以为这样就可以生成半椭圆，但实际上这样是没有正确理解水平半径和垂直半径以及容器宽高的关系。<br>百分比是按容器宽高来给定的，一半就是50%，撑开了整个容器的高度就是100%。</p>
<p><strong> 2)  四分之一椭圆 </strong><br>示例：<a href="http://codepen.io/cherishing/pen/pNypEN" target="_blank" rel="external">http://codepen.io/cherishing/pen/pNypEN</a></p>
<h3 id="圆"><a href="#圆" class="headerlink" title="圆"></a>圆</h3><p><img src="/img/CSS3-Sheap/border-radius_04.png" alt="bordr-raidus" width="50%" height="50%">   <strong>宽高相等显示圆</strong>；</p>
<p>指定任何大于100px的半径，仍然可以得到一个圆形。<br>原因：<br>     当任意两个相邻圆角的半径之和超越border box的尺寸时，用户代理必须按比例减小各个边框半径所使用的值，直到它们不会相互重叠。<br>                                                            —–css背景与边框<br>示例：<a href="示例：http://codepen.io/cherishing/pen/aBNVeV
">http://codepen.io/cherishing/pen/aBNVeV<br></a></p>
<h2 id="平行四边形"><a href="#平行四边形" class="headerlink" title="平行四边形"></a>平行四边形</h2><p>1、利用transform:skew()<br>Skew()变换坐标系：y轴顺时针为正，x轴逆时针为正（注：它的y轴正方向是水平向右，x轴正方向是水平向下）<br>示例：<a href="http://codepen.io/cherishing/pen/XNdVaZ" target="_blank" rel="external">http://codepen.io/cherishing/pen/XNdVaZ</a></p>
<p><font color="red">Bug: </font> </p>
<p><div>该属性会造成里面的文字也跟着变形，有什么办法只让容器变形，内容不 变形吗？？？？</div><br>1）对里面的内容再一次应用反向的shew()变形；从而抵消容器的变形效果<br>对内容添加一个div<br>示例：<a href="http://codepen.io/cherishing/pen/ENKooR" target="_blank" rel="external">http://codepen.io/cherishing/pen/ENKooR</a></p>
<p>2、利用伪元素<br>方法：利用伪元素及定位属性，产生一个方块，然后对伪元素设置样式，并将其放置在宿主元素下层。<br>示例：<a href="http://codepen.io/cherishing/pen/QGNaBp" target="_blank" rel="external">http://codepen.io/cherishing/pen/QGNaBp</a></p>
<h2 id="菱形"><a href="#菱形" class="headerlink" title="菱形"></a>菱形</h2><p>利用transform:rotate(angle);<br>angle为正数,表示顺时针旋转；<br>angle为负数,表示逆时针旋转;<br><img src="/img/CSS3-Sheap/css3-diamond.png" alt="菱形"><br>示例：<a href="http://codepen.io/cherishing/pen/bBpPBm" target="_blank" rel="external">http://codepen.io/cherishing/pen/bBpPBm</a></p>
<ul>
<li>菱形图片<br>  1）利用前面的平行四边形相似的处理方法，img外面套一个div，对容器旋转45度角；图片-45度角<br>  正常：<img src="/img/CSS3-Sheap/css3-diamond2.png" alt="菱形"><br>  但是有个hack，处理非正方形图片就会原型毕露。如下图：<br>  <img src="/img/CSS3-Sheap/css3-diamond3.png" alt="菱形"><br>  2）clip-path剪裁路径（实验技术）<br>  实验属性；没有被主流浏览器支持（包括ie和火狐）；但在webkit浏览器中，它可以使用。<br>  在现代浏览器中需要使用 -webkit- 前缀<br>  -webkit-clip-path:polygon(50% 0, 100% 50%, 50% 100%, 0 50%);<br>  示例：<a href="http://codepen.io/cherishing/pen/MbyLgV" target="_blank" rel="external">http://codepen.io/cherishing/pen/MbyLgV</a></li>
</ul>
<h2 id="切角效果"><a href="#切角效果" class="headerlink" title="切角效果"></a>切角效果</h2><p>1、linear-gradient(angle, color….color)<br>第一个参数指明渐变方向，<br>0deg表示从下往上，90deg表示渐变从左往右，180deg表示渐变从上往下，270deg表示渐变从右往左，顺时针 ；或者用to+关键字表示；to top等于0deg;<br>如：div { background: linear-gradient(10deg, red, blue) }<br><img src="/img/CSS3-Sheap/qiejiao_01.png" alt="菱形"><br>渐变本本质上就是background-image,所以我们可以像对待background-image一样使用background-size调整大小;<br>示例：<a href="http://codepen.io/cherishing/pen/zoqXqE" target="_blank" rel="external">http://codepen.io/cherishing/pen/zoqXqE</a><br>2、切角效果<br>一个角：<br>示例：<a href="http://codepen.io/cherishing/pen/gLrzEP" target="_blank" rel="external">http://codepen.io/cherishing/pen/gLrzEP</a></p>
<p>两个角、四个角：<br>示例：<a href="http://codepen.io/cherishing/pen/WowJBj" target="_blank" rel="external">http://codepen.io/cherishing/pen/WowJBj</a></p>
<p>或者用clip-path:polygon()</p>
<h2 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h2><p>1、基于transform的解决方法：<br>1）画一个左右两部分颜色不同的圆<br>2）把左（右）部分用伪元素遮盖住<br>3）通过旋转伪元素实现<br>区分小于50%和大于50%；<br>下面示例只实现的小于50%：<br>示例：<a href="http://codepen.io/cherishing/pen/yVJKzd" target="_blank" rel="external">http://codepen.io/cherishing/pen/yVJKzd</a></p>
<p>大于50%的处理方法:固定50%部分的颜色，通过旋转露出剩余的部分，所以给的角度只能在0~.5trun。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在研究css3，拜读了《css揭秘》，收益匪浅，对css有了更深刻的认识，css并没有想像的那么简单，很多效果现在都可以用css实现，就拿图形的形状来说吧，下面我将总结一下学习到的知识。css3形状主要包括：椭圆，平行四边形，菱形，切角效果，饼图等等。&lt;br&gt;每一天都在进步。&lt;br&gt;
    
    </summary>
    
    
      <category term="CSS3" scheme="http://yoursite.com/tags/CSS3/"/>
    
      <category term="CSS3形状" scheme="http://yoursite.com/tags/CSS3%E5%BD%A2%E7%8A%B6/"/>
    
  </entry>
  
  <entry>
    <title>北京的秋韵</title>
    <link href="http://yoursite.com/2016/11/08/autumnInBeijing/"/>
    <id>http://yoursite.com/2016/11/08/autumnInBeijing/</id>
    <published>2016-11-08T05:44:55.000Z</published>
    <updated>2016-12-15T05:36:22.924Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一叶知秋"><a href="#一叶知秋" class="headerlink" title="一叶知秋"></a>一叶知秋</h3><p><strong>袅袅兮秋风，洞庭波兮木叶下。</strong></p>
<p>见过南方的秋，可却独爱北京的秋。北京，这个神奇魔幻的城市，一群热血沸腾的人在这里燃烧着，一座让你暂时忘记雾霾的城市。<br>北秋美，叶子更美。清晰的脉络纹理。</p>
<p><strong><em>我愿你是个谎，生于南墙；我想你就站在，站在七月</em></strong><br><a id="more"></a></p>
<div class="autumnInBeijing" style="overflow:hidden;"><br>    <img src="/img/beiJingAutum/autumnInBeiJing_16.jpg" alt="北秋" style="width:48%" class="autumnInBeijing_scale">&nbsp;&nbsp;&nbsp;<img src="/img/beiJingAutum/autumnInBeiJing_01.jpg" alt="北秋" style="width:48%" class="autumnInBeijing_rotate"><br><br>    <img src="/img/beiJingAutum/autumnInBeiJing_11.jpg" alt="北秋" style="width:48%" class="autumnInBeijing_rotate">&nbsp;&nbsp;&nbsp;<img src="/img/beiJingAutum/autumnInBeiJing_17.jpg" alt="北秋" style="width:48%" class="autumnInBeijing_scale"><br><br>    <img src="/img/beiJingAutum/autumnInBeiJing_07.jpg" alt="北秋" style="width:48%">&nbsp;&nbsp;&nbsp;<img src="/img/beiJingAutum/autumnInBeiJing_01.jpg" alt="北秋" style="width:48%"><br><br>    <img src="/img/beiJingAutum/autumnInBeiJing_09.jpg" alt="北秋" style="width:48%">&nbsp;&nbsp;&nbsp;<img src="/img/beiJingAutum/autumnInBeiJing_08.jpg" alt="北秋" style="width:48%"><br><br>    <img src="/img/beiJingAutum/autumnInBeiJing_13.jpg" alt="北秋" style="width:48%">&nbsp;&nbsp;&nbsp;<img src="/img/beiJingAutum/autumnInBeiJing_02.jpg" alt="北秋" style="width:48%"><br><br>    <img src="/img/beiJingAutum/autumnInBeiJing_05.jpg" alt="北秋" style="width:48%">&nbsp;&nbsp;&nbsp;<img src="/img/beiJingAutum/autumnInBeiJing_12.jpg" alt="北秋" style="width:48%"><br><br>    <img src="/img/beiJingAutum/autumnInBeiJing_10.jpg" alt="北秋" style="width:48%">&nbsp;&nbsp;&nbsp;<img src="/img/beiJingAutum/autumnInBeiJing_14.jpg" alt="北秋" style="width:48%"><br><br>   <img src="/img/beiJingAutum/autumnInBeiJing_04.jpg" alt="北秋" style="width:48%">&nbsp;&nbsp;&nbsp;<img src="/img/beiJingAutum/autumnInBeiJing_15.jpg" alt="北秋" style="width:48%"><br><br><span style="font-size:18px; color:#16982B; float:right;" class="autumnInBeijing-smile">smile &gt;.&lt; </span><br></div>

]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一叶知秋&quot;&gt;&lt;a href=&quot;#一叶知秋&quot; class=&quot;headerlink&quot; title=&quot;一叶知秋&quot;&gt;&lt;/a&gt;一叶知秋&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;袅袅兮秋风，洞庭波兮木叶下。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;见过南方的秋，可却独爱北京的秋。北京，这个神奇魔幻的城市，一群热血沸腾的人在这里燃烧着，一座让你暂时忘记雾霾的城市。&lt;br&gt;北秋美，叶子更美。清晰的脉络纹理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;我愿你是个谎，生于南墙；我想你就站在，站在七月&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="北京" scheme="http://yoursite.com/tags/%E5%8C%97%E4%BA%AC/"/>
    
      <category term="秋韵" scheme="http://yoursite.com/tags/%E7%A7%8B%E9%9F%B5/"/>
    
  </entry>
  
  <entry>
    <title>浏览器的历史记录</title>
    <link href="http://yoursite.com/2016/11/07/bowerHistory/"/>
    <id>http://yoursite.com/2016/11/07/bowerHistory/</id>
    <published>2016-11-07T11:21:19.000Z</published>
    <updated>2016-12-21T03:14:32.622Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Ajax使得页面实现了无刷新更新内容，但是带来了一个问题，页面发生改变但是不能前进后退。因为ajax请求页面的内容是改变了，但是浏览器的url保持原来的，进而无法前进后退。</p>
<h2 id="history对象"><a href="#history对象" class="headerlink" title="history对象"></a>history对象</h2><p>浏览器的window对象的history对象提供了访问和操纵历史记录的能力。作用于SPA。</p>
<p>History的方法：back()、forward()、go(num)、pushState()、replaceState()<br>属性：state、length<br>popstate事件<br><a id="more"></a></p>
<h4 id="历史记录栈"><a href="#历史记录栈" class="headerlink" title="历史记录栈"></a>历史记录栈</h4><p>浏览器有一个数据结构用来存储网页的历史记录，称之为历史记录栈。它是栈的一个应用。浏览器对历史记录栈的存储总数有限制，谷歌和火狐都是长度为50。当历史记录栈存储的量超过这个限制后，历史记录得存储就会采用滚动的方式存储，也就是新的记录会压入到栈的顶部，最底部的记录会从栈的底部移除出去。</p>
<h4 id="详细介绍history对象"><a href="#详细介绍history对象" class="headerlink" title="详细介绍history对象"></a>详细介绍history对象</h4><p><strong>1）前进与后退</strong><br>Window.history.forward()  //等同于浏览器的工具栏点击前进按钮<br>Window.history.back()  //等同于浏览器的工具栏点击返回按钮</p>
<p>2）移动到指定的历史记录点<br>Window.history.go(n);  //n为负数是后退，正数是前进，0是当前页面</p>
<p>3）Length属性值，了解历史记录栈中一共有多少页</p>
<p>4）读取当前状态<br>History.state直接读取当前历史记录条目的状态</p>
<p>5） pushState() —-HTML5新增<br>pushSate(stata,title,url)：添加和修改历史记录条目<br>state： 一个JavaScript对象，与用pushState()方法创建的新历史记录条目关联。<br>title ：  FireFox浏览器目前会忽略该参数，虽然以后可能会用上。考虑到未来可能会对该方法进行修改，传一个空字符串会比较安全。或者，你也可以传入一个简短的标题，标明将要进入的状态。<br>url ：  新的历史记录条目的地址。浏览器不会在调用pushState()方法后加载该地址，但之后，可能会试图加载，例如用户重启浏览器。新的URL不一定是绝对路径；如果是相对路径，它将以当前URL为基准；传入的URL与当前URL应该是同源的，否则，pushState()会抛出异常。该参数是可选的；不指定的话则为文档当前URL。</p>
<p>pushState永远不会触发hashchange事件，即使新地址只变更了hash.<br>pushState将当前url和history.state加入到history中，并用新的state和url替换当前，不会造成页面刷新，它带来的地址栏的改变不会出发hash跳转效果，只是将这个地址添加到历史记录中。</p>
<p>6）修改历史记录条目<br>history.replaceState(state, title, url)：用新的state和URL替换当前。不会造成页面刷新。<br>replaceState()：修改浏览器当前历史记录条目。<br>不同于pushState,replaceState()会修改当前历史记录条目而非创建新的条目。</p>
<p>7）popstate事件<br>每当激活的历史纪录发生变化时，都会触发popstate事件。如果被激活的历史纪录条目是由pushState所创建，或是被replaceState方法影响到，popstate事件的状态属性将包含历史纪录的状态对象的一个拷贝。<br>前进/后退触发popstate事件。</p>
<p>8）代码阅读<br>代码：<br>history.pushState(“”,””,”?name=1”);<br>history.pushState(“”,””,”?name=2”);<br>history.pushState(“”,””,”?name=3”);<br>history.pushState(“”,””,”?name=4”); //代码执行到此处历史记录栈的情况如图history_1<br><img src="/img/history/history_01.jpg" alt="历史记录栈"><br>history.replaceState(“”,””,”?name=5”);<br><img src="/img/history/history_02.jpg" alt="历史记录栈"><br>history.back();<br><img src="/img/history/history_03.jpg" alt="历史记录栈"><br>history.go(1);<br>history.go(-2);<br><img src="/img/history/history_04.jpg" alt="历史记录栈"><br>history.pushState(“”,””,”?name=6”);<br><img src="/img/history/history_05.jpg" alt="历史记录栈"><br>history.replaceState(“”,””,”?name=7”);<br><img src="/img/history/history_06.jpg" alt="历史记录栈"></p>
<h5 id="资料参考链接"><a href="#资料参考链接" class="headerlink" title="资料参考链接"></a><a href="https://developer.mozilla.org/zh-CN/docs/DOM/Manipulating_the_browser_history" target="_blank" rel="external">资料参考链接</a></h5>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Ajax使得页面实现了无刷新更新内容，但是带来了一个问题，页面发生改变但是不能前进后退。因为ajax请求页面的内容是改变了，但是浏览器的url保持原来的，进而无法前进后退。&lt;/p&gt;
&lt;h2 id=&quot;history对象&quot;&gt;&lt;a href=&quot;#history对象&quot; class=&quot;headerlink&quot; title=&quot;history对象&quot;&gt;&lt;/a&gt;history对象&lt;/h2&gt;&lt;p&gt;浏览器的window对象的history对象提供了访问和操纵历史记录的能力。作用于SPA。&lt;/p&gt;
&lt;p&gt;History的方法：back()、forward()、go(num)、pushState()、replaceState()&lt;br&gt;属性：state、length&lt;br&gt;popstate事件&lt;br&gt;
    
    </summary>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="History对象" scheme="http://yoursite.com/tags/History%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>青岛之行</title>
    <link href="http://yoursite.com/2016/09/19/qingdaoTravel/"/>
    <id>http://yoursite.com/2016/09/19/qingdaoTravel/</id>
    <published>2016-09-19T10:12:08.000Z</published>
    <updated>2016-12-15T05:30:55.994Z</updated>
    
    <content type="html"><![CDATA[<h2 id="她说。她想成为一棵树"><a href="#她说。她想成为一棵树" class="headerlink" title="她说。她想成为一棵树"></a>她说。她想成为一棵树</h2><p><em>如果有来生</em><br><em>要做一棵树</em><br><em>站成永恒</em><br><em>没有悲欢的姿势</em><br><em>一半在尘土里安详</em><br><em>一半在风里飞扬</em><br><em>一半洒落阴凉</em><br><em>一半沐浴阳光</em><br><em>非常沉默非常骄傲</em><br><em>从不依靠从不寻找</em><br>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;– <em>三毛</em><br><a id="more"></a></p>
<h4 id="青岛初印象"><a href="#青岛初印象" class="headerlink" title="青岛初印象"></a>青岛初印象</h4><ul>
<li><strong>青岛火车站</strong>，没有奢侈繁华的装饰，墙面给人简单质朴的感觉。<br><img src="/img/qingDao/train.jpg" alt="火车站" style="width:600px; height:400px;"><br>&ensp;</li>
<li>海鲜，海鲜，海鲜，…..<br>来青岛不吃海鲜不就白来了吗，不喝啤酒不就白来了吗，这味道，完美。海鲜大餐，开吃，开吃，开吃。<br><img src="/img/qingDao/foods_01.jpg" alt="海鲜" style="width:200px; height:240px;">&ensp;<img src="/img/qingDao/foods_02.jpg" alt="海鲜" style="width:200px; height:240px;">&ensp;<img src="/img/qingDao/foods_03.jpg" alt="海鲜" style="width:200px; height:240px;"></li>
<li><p><strong>青岛的路</strong><br>中山路，湖南路，广西路…<br>青岛的建筑很美丽。<br><img src="/img/qingDao/road_02.jpg" alt="road" style="width:300px; height:300px;">&ensp;<img src="/img/qingDao/road_03.jpg" alt="road" style="width:300px; height:300px;">&ensp;</p>
</li>
<li><p><strong>天主教堂</strong></p>
</li>
</ul>
<p><img src="/img/qingDao/jiaotang.jpg" alt="教堂" style="width:300px; height:300px;">&ensp;<img src="/img/qingDao/jiaotang02.jpg" alt="教堂" style="width:300px; height:300px;">&ensp;&ensp;</p>
<p><img src="/img/qingDao/jiaotang03.jpg" alt="教堂" style="width:300px; height:300px;">&ensp;<img src="/img/qingDao/jiaotang04.jpg" alt="教堂" style="width:300px; height:300px;">&ensp;</p>
<ul>
<li><strong>良友书坊</strong></li>
</ul>
<p>喜欢方所，心之所属。一直以来都梦想有一家自己的书店。<br>良友书坊，参观了一下，里面的画还是很nice滴。</p>
<p><img src="/img/qingDao/liangyou_02.jpg" alt="良友书坊" style="width:300px; height:300px;">&ensp;<img src="/img/qingDao/liangyou.jpg" alt="良友书坊" style="width:300px; height:300px;">&ensp;</p>
<p><img src="/img/qingDao/hua.jpg" alt="良友书坊" style="width:610px; height:500px;">&ensp;</p>
<ul>
<li><p><strong>邮电博物馆</strong><br><img src="/img/qingDao/youdain.jpg" alt="邮电博物馆" style="width:610px; height:600px;">&ensp;</p>
</li>
<li><p><strong>电视塔</strong></p>
</li>
</ul>
<p><img src="/img/qingDao/all_01.jpg" alt="电视塔" style="width:600px; height:500px;">&ensp;&ensp;</p>
<p><img src="/img/qingDao/all_02.jpg" alt="电视塔" style="width:600px; height:500px;">&ensp;</p>
<p><img src="/img/qingDao/tower.jpg" alt="电视塔" style="width:610px; height:700px;">&ensp;</p>
<ul>
<li><p><strong>五四广场</strong><br><img src="/img/qingDao/54.jpg" alt="五四广场" style="width:610px; height:700px;">&ensp;</p>
</li>
<li><p><strong>夜景</strong><br><img src="/img/qingDao/night.jpg" alt="夜景" style="width:610px; height:700px;">&ensp;</p>
</li>
</ul>
<h4 id="第一次看海"><a href="#第一次看海" class="headerlink" title="第一次看海"></a>第一次看海</h4><p>谢谢你带我去看海，海水没有蓝蓝的，天空没有蓝蓝的，可心情是蓝蓝的。<br>青岛，<br>老想着在海边买一栋小房子，卖着书，鲜花和杂货，心目中的美好大抵如此。</p>
<p><img src="/img/qingDao/sea14.jpg" alt="海" style="width:300px; height:300px;">&ensp;<img src="/img/qingDao/sea13.jpg" alt="海" style="width:300px; height:300px;"></p>
<p>记忆中的海很蓝，蓝的不像话。可现实：</p>
<p><img src="/img/qingDao/sea12.jpg" alt="海" style="width:600px; height:400px;"></p>
<h4 id="时光-未来"><a href="#时光-未来" class="headerlink" title="时光-未来"></a>时光-未来</h4><p>那天（2016年9月17日）给未来寄了一份信。<br>时光从不会辜负每一个努力的人，时光偶尔有点残酷，但别让一小点就对未来失去美好的希望，希望你被世界温柔的对待，每一个认真的人都值得被温柔的对待。愿你别辜负自己。<br>未来在那头，希望在那头，选择在这头。</p>
<p><img src="/img/qingDao/time_01.jpg" alt="时光" style="width:300px; height:300px;">&ensp;&ensp;<img src="/img/qingDao/time_02.jpg" alt="时光" style="width:300px; height:300px;"></p>
<p><img src="/img/qingDao/time_03.jpg" alt="时光" style="width:300px; height:300px;">&ensp;&ensp;<img src="/img/qingDao/time_04.jpg" alt="时光" style="width:300px; height:300px;"></p>
<h5 id="YEAH"><a href="#YEAH" class="headerlink" title="YEAH"></a>YEAH</h5><p><img src="/img/qingDao/yeah.jpg" alt="海" style="width:600px; height:700px;"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;她说。她想成为一棵树&quot;&gt;&lt;a href=&quot;#她说。她想成为一棵树&quot; class=&quot;headerlink&quot; title=&quot;她说。她想成为一棵树&quot;&gt;&lt;/a&gt;她说。她想成为一棵树&lt;/h2&gt;&lt;p&gt;&lt;em&gt;如果有来生&lt;/em&gt;&lt;br&gt;&lt;em&gt;要做一棵树&lt;/em&gt;&lt;br&gt;&lt;em&gt;站成永恒&lt;/em&gt;&lt;br&gt;&lt;em&gt;没有悲欢的姿势&lt;/em&gt;&lt;br&gt;&lt;em&gt;一半在尘土里安详&lt;/em&gt;&lt;br&gt;&lt;em&gt;一半在风里飞扬&lt;/em&gt;&lt;br&gt;&lt;em&gt;一半洒落阴凉&lt;/em&gt;&lt;br&gt;&lt;em&gt;一半沐浴阳光&lt;/em&gt;&lt;br&gt;&lt;em&gt;非常沉默非常骄傲&lt;/em&gt;&lt;br&gt;&lt;em&gt;从不依靠从不寻找&lt;/em&gt;&lt;br&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;– &lt;em&gt;三毛&lt;/em&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="旅游" scheme="http://yoursite.com/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Date日期对象</title>
    <link href="http://yoursite.com/2016/09/13/dateObject/"/>
    <id>http://yoursite.com/2016/09/13/dateObject/</id>
    <published>2016-09-13T07:47:10.000Z</published>
    <updated>2016-09-13T10:21:08.573Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Javascript日期操作"><a href="#Javascript日期操作" class="headerlink" title="Javascript日期操作"></a>Javascript日期操作</h2><p>知识在于累积，感觉自己遗忘的速度有点快呀，连最基本的日期对象都记得不是特别牢固，今天阅读项目中的一段JSON字段，如下：<br>                “from”: <strong>-4045717554</strong>,<br>                “to”: <strong>-1219713505</strong><br>看到这两个日期，我一脸茫然，负的毫秒数。找到使用处的代码。看到一个有意思的函数：<br>&ensp;function cvtTime(tick){<br>&ensp;&ensp;&ensp;&ensp;var curDateTick = new Date().getTime();<br>&ensp;&ensp;&ensp;&ensp;tick = 0 - 100 * ((0 - tick) % 100000000);<br>&ensp;&ensp;&ensp;&ensp;return new Date(curDateTick + tick);<br>&ensp;}<br>咋看之初，还是无法明白这是有什么用途，执行发现原来是给出相对当前时间的偏移量，计算出某个时间。<br><a id="more"></a><br>顺带回顾了一下日期对象：<br>    var d = new Date();<br>    d.getFullYear(); //年<br>    d.getMonth()+1;  //月<br>    d.getDate();     //日<br>    d.getHours();    //时<br>    d.getMinutes();  //分<br>    d.getSeconds();  //秒<br>    d.getDay();      //星期<br>    d.getTime();     //返回1970年1月1日至今的毫秒数<br>    相应的有set方法。<br>常用的日期处理方法：</p>
<pre><code>    /* 说明：时间格式处理(年/月/日 时:分:秒)
     *  返回值类型：对象
     */
     function formatDate(DateIn) {
        var Year = 0;
        var Month = 0;
        var Day = 0;
        var Hour = 0;
        var Minute = 0;
        var Second = 0;
        var CurrentDate = &quot;&quot;;
        var CurrentHms = &quot;&quot;;//当前时分秒

        //初始化时间
        Year = DateIn.getYear() + 1900;
        Month = DateIn.getMonth() + 1;
        Day = DateIn.getDate();
        Hour = DateIn.getHours();
        Minute = DateIn.getMinutes();
        Second = DateIn.getSeconds();

        CurrentDate = Year + &quot;/&quot;;
        if (Month &gt;= 10) {
            CurrentDate = CurrentDate + Month + &quot;/&quot;;
        }
        else {
            CurrentDate = CurrentDate + &quot;0&quot; + Month + &quot;/&quot;;
        }
        if (Day &gt;= 10) {
            CurrentDate = CurrentDate + Day;
        }
        else {
            CurrentDate = CurrentDate + &quot;0&quot; + Day;
        }

        if (Hour &gt;= 10) {
            CurrentDate = CurrentDate + &quot; &quot; + Hour;
            CurrentHms = CurrentHms + Hour;
        }
        else {
            CurrentDate = CurrentDate + &quot; 0&quot; + Hour;
            CurrentHms = CurrentHms + &quot; 0&quot; + Hour;
        }

        if (Minute &gt;= 10) {
            CurrentDate = CurrentDate + &quot;:&quot; + Minute;
            CurrentHms = CurrentHms + &quot;:&quot; + Minute;
        }
        else {
            CurrentDate = CurrentDate + &quot;:0&quot; + Minute;
            CurrentHms = CurrentHms + &quot;:0&quot; + Minute;
        }

        if (Second &gt;= 10) {
            CurrentDate = CurrentDate + &quot;:&quot; + Second;
            CurrentHms = CurrentHms + &quot;:&quot; + Second;
        } else {
            CurrentDate = CurrentDate + &quot;:0&quot; + Second;
            CurrentHms = CurrentHms + &quot;:0&quot; + Second;
        }
        return {
            CurrentDate: CurrentDate,// 年/月/日 时：分：秒
            CurrentHms: CurrentHms // 时：分：秒
        };
    }


//将日期对象转换为字符串,格式为2016/05/05 12:05:24
    function changeDateToString(DateIn) {
        var Year = 0;
        var Month = 0;
        var Day = 0;
        var Hour = 0;
        var Minute = 0;
        var Second = 0;
        var CurrentDate = &quot;&quot;;

        //初始化时间
        Year = DateIn.getYear() + 1900;
        Month = DateIn.getMonth() + 1;
        Day = DateIn.getDate();
        Hour = DateIn.getHours();
        Minute = DateIn.getMinutes();
        Second = DateIn.getSeconds();

        CurrentDate = Year + &quot;-&quot;;
        if (Month &gt;= 10) {
            CurrentDate = CurrentDate + Month + &quot;-&quot;;
        }
        else {
            CurrentDate = CurrentDate + &quot;0&quot; + Month + &quot;-&quot;;
        }
        if (Day &gt;= 10) {
            CurrentDate = CurrentDate + Day;
        }
        else {
            CurrentDate = CurrentDate + &quot;0&quot; + Day;
        }

        if (Hour &gt;= 10) {
            CurrentDate = CurrentDate + &quot; &quot; + Hour;
        }
        else {
            CurrentDate = CurrentDate + &quot; 0&quot; + Hour;
        }

        if (Minute &gt;= 10) {
            CurrentDate = CurrentDate + &quot;:&quot; + Minute;
        }
        else {
            CurrentDate = CurrentDate + &quot;:0&quot; + Minute;
        }

        if (Second &gt;= 10) {
            CurrentDate = CurrentDate + &quot;:&quot; + Second;
        } else {
            CurrentDate = CurrentDate + &quot;:0&quot; + Second;
        }
        return CurrentDate;
    },

    //将日期对象转换为字符串,格式为2016-05-05(无时分秒)
   function changeDayToString (DateIn, showHour) {
        var Year = 0;
        var Month = 0;
        var Day = 0;
        var Hour = 0;
        var Minute = 0;
        var Second = 0;
        var CurrentDate = &quot;&quot;;

        //初始化时间
        Year = DateIn.getYear() + 1900;
        Month = DateIn.getMonth() + 1;
        Day = DateIn.getDate();
        Hour = DateIn.getHours();
        Minute = DateIn.getMinutes();
        Second = DateIn.getSeconds();

        CurrentDate = Year + &quot;-&quot;;
        if (Month &gt;= 10) {
            CurrentDate = CurrentDate + Month + &quot;-&quot;;
        }
        else {
            CurrentDate = CurrentDate + &quot;0&quot; + Month + &quot;-&quot;;
        }
        if (Day &gt;= 10) {
            CurrentDate = CurrentDate + Day;
        }
        else {
            CurrentDate = CurrentDate + &quot;0&quot; + Day;
        }

        if (!!showHour) {
            if (Hour &gt;= 10) {
                CurrentDate = CurrentDate + &quot; &quot; + Hour;
            }
            else {
                CurrentDate = CurrentDate + &quot; 0&quot; + Hour;
            }

            if (Minute &gt;= 10) {
                CurrentDate = CurrentDate + &quot;:&quot; + Minute;
            }
            else {
                CurrentDate = CurrentDate + &quot;:0&quot; + Minute;
            }

            if (Second &gt;= 10) {
                CurrentDate = CurrentDate + &quot;:&quot; + Second;
            }
            else {
                CurrentDate = CurrentDate + &quot;:0&quot; + Second;
            }
        }

        return CurrentDate;
    }
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Javascript日期操作&quot;&gt;&lt;a href=&quot;#Javascript日期操作&quot; class=&quot;headerlink&quot; title=&quot;Javascript日期操作&quot;&gt;&lt;/a&gt;Javascript日期操作&lt;/h2&gt;&lt;p&gt;知识在于累积，感觉自己遗忘的速度有点快呀，连最基本的日期对象都记得不是特别牢固，今天阅读项目中的一段JSON字段，如下：&lt;br&gt;                “from”: &lt;strong&gt;-4045717554&lt;/strong&gt;,&lt;br&gt;                “to”: &lt;strong&gt;-1219713505&lt;/strong&gt;&lt;br&gt;看到这两个日期，我一脸茫然，负的毫秒数。找到使用处的代码。看到一个有意思的函数：&lt;br&gt;&amp;ensp;function cvtTime(tick){&lt;br&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;var curDateTick = new Date().getTime();&lt;br&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;tick = 0 - 100 * ((0 - tick) % 100000000);&lt;br&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;return new Date(curDateTick + tick);&lt;br&gt;&amp;ensp;}&lt;br&gt;咋看之初，还是无法明白这是有什么用途，执行发现原来是给出相对当前时间的偏移量，计算出某个时间。&lt;br&gt;
    
    </summary>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="Date对象" scheme="http://yoursite.com/tags/Date%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>初遇 Hexo</title>
    <link href="http://yoursite.com/2016/09/07/meetHexo/"/>
    <id>http://yoursite.com/2016/09/07/meetHexo/</id>
    <published>2016-09-07T05:14:21.000Z</published>
    <updated>2016-12-21T01:48:44.849Z</updated>
    
    <content type="html"><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul>
<li>node</li>
<li>git</li>
<li>GitHub（注意<a href="http://blog.csdn.net/dengjianqiang2011/article/details/9260435" target="_blank" rel="external">ssh</a>）</li>
<li>评论框（使用多说评论框）</li>
<li>主题（<a href="https://github.com/ahonn/hexo-theme-even" target="_blank" rel="external">even</a>）<h3 id="学习教程"><a href="#学习教程" class="headerlink" title="学习教程"></a>学习教程</h3>-<a href="http://www.jianshu.com/p/808554f12929" target="_blank" rel="external">快速搭建博客</a><br>初遇博客，用来记录点滴,见证自己的成长平台。<br>日行一步。<a id="more"></a>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;node&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;GitHub（注意&lt;a href=&quot;http://blog.csdn.net/dengjianqiang2011/article/details/9260435&quot;&gt;ssh&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;评论框（使用多说评论框）&lt;/li&gt;
&lt;li&gt;主题（&lt;a href=&quot;https://github.com/ahonn/hexo-theme-even&quot;&gt;even&lt;/a&gt;）&lt;h3 id=&quot;学习教程&quot;&gt;&lt;a href=&quot;#学习教程&quot; class=&quot;headerlink&quot; title=&quot;学习教程&quot;&gt;&lt;/a&gt;学习教程&lt;/h3&gt;-&lt;a href=&quot;http://www.jianshu.com/p/808554f12929&quot;&gt;快速搭建博客&lt;/a&gt;&lt;br&gt;初遇博客，用来记录点滴,见证自己的成长平台。&lt;br&gt;日行一步。
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
